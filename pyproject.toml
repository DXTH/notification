[project]
name = "notification"
version = "0.1.0"
description = ""
authors = [
    {name = "Denys",email = "dxth63@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "streamlit (>=1.45.1,<2.0.0)"
]

[tool.poetry]

[tool.poetry.group.dev.dependencies]
pandas = "^2.2.3"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80            # Enforce 80-char lines.
indent-width = 4
target-version = "py313"    # Trager python version is 3.13
fix = true

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
 
[tool.ruff.lint]
# Enable all ruff rules by default, then ignore overlaping ones
select = ["ALL"]
extend-ignore =  [
    "D",
    "N",    # PEP8 naming handed by Pylint
    "PL",   # All Pylint-oequivalent rules must be handed by Pylint
    "E501", # Line-too-long exeption is handed by Pylint
    "D203",
]
fixable = ["ALL"]   # Allow fix for all enabled rules when `--fix` is provided
 
[tool.ruff.format]
quote-style = "double"  # Use double quotes for strings.
indent-style = "space"  # Like Black, indent with spaces, rather than tabs.
skip-magic-trailing-comma = false   # Respect magic trailing commas.
line-ending = "auto"    # Automatically detect the appropriate line ending.
 
[tool.ruff.lint.mccabe]
max-complexity = 5  # Cylcomatic complexity treshold by Thomas J. McCabe,
# for more information see https://en.wikipedia.org/wiki/Cyclomatic_complexity
[tool.pylint.format]
max-line-length = 80

[tool.ruff.lint.per-file-ignores]
"*/tests/*" = [
    "F401", 
    "S101",
    "SLF001",
]

[tool.coverage.report]
exclude_also = [
    'if self.debug:',
    'if settings.DEBUG',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',

    'raise AssertionError',
    'raise NotImplementedError',
    '@(abc\.)?abstractmethod',
]
[tool.coverage.run]
omit = [
    "*/errors/*",
    "*/tests/*",
]